# This is a basic workflow that is triggered for stage and production environment

name: Stage & Prod Deployment

# Controls when the action will run. Workflow runs when manually triggered API.
on:
  repository_dispatch:
   types: [Stage deployment,Production deployment]

jobs:

  buildStg:
    runs-on: ubuntu-latest
    if: contains(github.event.client_payload.environment,'Stage') && contains(github.event.action,'Stage')
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build
      env:
        GITHUB_USER: ${{ secrets.GIT_USER }}
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        env: stg
        key: ${{ secrets.MULE_KEY }}
        MULE_NEXUS_USER: ${{secrets.MULE_NEXUS_USER}}
        MULE_NEXUS_PASSWORD: ${{secrets.MULE_NEXUS_PASSWORD}}
        GIT_ACTOR: ${{secrets.GIT_ACTOR}}
      if: github.actor == env.GIT_ACTOR  
      run: |
        echo ${{github.event.client_payload.environment}}
        echo ${{github.actor}}
        mvn -s $GITHUB_WORKSPACE/.github/workflows/settings.xml -B package --file pom.xml
    - name: Stamp artifact file name with commit hash
      run: | 
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/.$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - uses: actions/upload-artifact@main
      with:
          name: artifacts
          path: target/*.jar 
          
  buildPrd:
    runs-on: ubuntu-latest
    if: contains(github.event.client_payload.environment,'Production') && contains(github.event.action,'Production')
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build
      env:
        GITHUB_USER: ${{ secrets.GIT_USER }}
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        env: prd
        key: ${{ secrets.MULE_KEY }}
        MULE_NEXUS_USER: ${{secrets.MULE_NEXUS_USER}}
        MULE_NEXUS_PASSWORD: ${{secrets.MULE_NEXUS_PASSWORD}}
        GIT_ACTOR: ${{secrets.GIT_ACTOR}}
      if: github.actor == env.GIT_ACTOR
      run: |
        echo ${{github.event.client_payload.environment}}
        echo ${{github.actor}}
        mvn -s $GITHUB_WORKSPACE/.github/workflows/settings.xml -B package --file pom.xml
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/.$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - uses: actions/upload-artifact@main
      with:
          name: artifacts
          path: target/*.jar
          

  
  deployStg:
    needs: buildStg
    runs-on: ubuntu-latest
    if: contains(github.event.client_payload.environment,'Stage') && contains(github.event.action,'Stage')
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@main
      with:
        name: artifacts
    - name: Deploy to CloudHub
      env:
        USERNAME: ${{ secrets.ANYPOINT_USER }}
        PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
        GITHUB_USER: ${{ secrets.GIT_USER }}
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        BUILD_NAME: s-${{ github.event.repository.name }}
        ANYPOINT_ORG: ${{github.event.client_payload.businessGroup}}
        CH_ENV: ${{github.event.client_payload.environment}}
        CH_WORKERTYPE: ${{github.event.client_payload.workerType}}
        CH_WORKERS: ${{github.event.client_payload.workers}}
        env: stg
        key: ${{ secrets.MULE_KEY }}
        ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID_STG}}
        ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET_STG}}
        
        
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn mule:deploy -Dmule.artifact=$artifactName -Danypoint.userName="$USERNAME" -Danypoint.password="$PASSWORD"
        
  deployPrd:
    needs: buildPrd
    runs-on: ubuntu-latest
    if: contains(github.event.client_payload.environment,'Production') && contains(github.event.action,'Production')
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@main
      with:
        name: artifacts
    - name: Deploy to CloudHub
      env:
        USERNAME: ${{ secrets.ANYPOINT_USER }}
        PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
        GITHUB_USER: ${{ secrets.GIT_USER }}
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        BUILD_NAME: ${{ github.event.repository.name }}
        env: prd
        key: ${{ secrets.MULE_KEY }}   
        ANYPOINT_ORG: ${{github.event.client_payload.businessGroup}}
        CH_ENV: ${{github.event.client_payload.environment}}
        CH_WORKERTYPE: ${{github.event.client_payload.workerType}}
        CH_WORKERS: ${{github.event.client_payload.workers}}
        ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID_PRD}}
        ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET_PRD}}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn mule:deploy -Dmule.artifact=$artifactName -Danypoint.userName="$USERNAME" -Danypoint.password="$PASSWORD"
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        INITIAL_VERSION: 0.0.0
        DEFAULT_BUMP: ${{github.event.client_payload.releaseType}}
        WITH_V: true
